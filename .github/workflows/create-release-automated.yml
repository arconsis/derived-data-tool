name: Create Release [AUTOMATED]

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: "Release version"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.get_version.outputs.release-version }}
      current-version: ${{ steps.get_version.outputs.current-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get Version
        id: get_version
        uses: ./.github/actions/get-version
        with:
          release-type: ${{ inputs.release-type }}

  build:
    needs: [get-version]
    runs-on: macos-15
    env:
      version: ${{ needs.get-version.outputs.release-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      - name: Initiate Swift Dependency Cache
        uses: ./.github/actions/create-swift-dependency-cache

      - name: Set new Version in Code
        uses: ./.github/actions/set-version-in-code
        with:
          version: ${{ env.version }}

      # Build, sign, and package for arm64
      - name: Build Executable (arm64)
        uses: ./.github/actions/build-executable
        with:
          arch: arm64
          output: ./derived-data-tool
      - name: Sign Binary
        uses: ./.github/actions/simple-sign-action
        with:
          executable: ./derived-data-tool
          certificate_p12: ${{ secrets.APPLE_CERTIFICATE_P12 }}
          certificate_pwd: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          keychain_pwd: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
      # - name: Sign an Application Bundle
      #   uses: indygreg/apple-code-sign-action@v1
      #   with:
      #     input_path: ./derived-data-tool
      #     output_path: dist/derived-data-tool

      # - name: Sign and Notarize Executable (arm64)
      #   uses: ./.github/actions/sign-and-notarize
      #   with:
      #     executable: ./derived-data-tool
      #     apple_signing_identity: ${{ secrets.APPLE_SIGNING_IDENTITY }}
      #     apple_id: ${{ secrets.APPLE_ID }}
      #     apple_team_id: ${{ secrets.APPLE_TEAM_ID }}
      #     apple_app_specific_password: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
      - name: Package Executable (arm64)
        run: tar -czf derived-data-tool-arm64.tar.gz derived-data-tool

      # Build, sign, and package for x86_64
      # - name: Build Executable (x86_64)
      #   uses: ./.github/actions/build-executable
      #   with:
      #     arch: x86_64
      #     output: ./derived-data-tool-x86_64
      # - name: Sign and Notarize Executable (x86_64)
      #   uses: ./.github/actions/sign-and-notarize
      #   with:
      #     executable: ./derived-data-tool-x86_64
      #     apple_signing_identity: ${{ secrets.APPLE_SIGNING_IDENTITY }}
      #     apple_id: ${{ secrets.APPLE_ID }}
      #     apple_team_id: ${{ secrets.APPLE_TEAM_ID }}
      #     apple_app_specific_password: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
      # - name: Package Executable (x86_64)
      #   run: tar -czf derived-data-tool-x86_64.tar.gz derived-data-tool-x86_64

      # Build, sign, and package for universal
      # - name: Build Executable (universal)
      #   uses: ./.github/actions/build-executable
      #   with:
      #     arch: universal
      #     output: ./derived-data-tool-universal
      # - name: Sign and Notarize Executable (universal)
      #   uses: ./.github/actions/sign-and-notarize
      #   with:
      #     executable: ./derived-data-tool-universal
      #     apple_signing_identity: ${{ secrets.APPLE_SIGNING_IDENTITY }}
      #     apple_id: ${{ secrets.APPLE_ID }}
      #     apple_team_id: ${{ secrets.APPLE_TEAM_ID }}
      #     apple_app_specific_password: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
      # - name: Package Executable (universal)
      #   run: tar -czf derived-data-tool-universal.tar.gz derived-data-tool-universal

      # Upload all executables
      - name: Upload Executable Archive (arm64)
        uses: actions/upload-artifact@v4
        with:
          name: derived-data-tool
          path: derived-data-tool-arm64.tar.gz
          retention-days: 14
      # - name: Upload Executable Archive (x86_64)
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: derived-data-tool-x86_64
      #     path: derived-data-tool-x86_64.tar.gz
      #     retention-days: 14
      # - name: Upload Executable Archive (universal)
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: derived-data-tool-universal
      #     path: derived-data-tool-universal.tar.gz
      #     retention-days: 14

      # - name: Validate and increment version using Swift script
      #   id: next_version_build
      #   uses: ./.github/actions/version-validation
      #   with:
      #     mode: build
      #     version: ${{ env.version }}
      - name: Add tag to main branch
        uses: ./.github/actions/add-git-tag
        with:
          tag: ${{ env.version }}

  create-release-branch:
    needs: [get-version, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
      - name: Create Release Branch
        uses: ./.github/actions/create-release-branch
        with:
          release-version: ${{ needs.get-version.outputs.release-version }}

  create-github-release:
    needs: [build, get-version]
    runs-on: ubuntu-latest
    env:
      version: ${{ needs.get-version.outputs.release-version }}
    steps:
      - name: Download Executable Archive (arm64)
        uses: actions/download-artifact@v5
        with:
          name: derived-data-tool
          path: ./dist
      # - name: Download Executable Archive (x86_64)
      #   uses: actions/download-artifact@v5
      #   with:
      #     name: derived-data-tool-x86_64
      #     path: ./dist
      # - name: Download Executable Archive (universal)
      #   uses: actions/download-artifact@v5
      #   with:
      #     name: derived-data-tool-universal
      #     path: ./dist
      - name: List dist directory contents
        run: ls -l ./dist
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.version }}
          release_name: Release ${{ env.version }}
          body: |
            Automated release for version ${{ env.version }}.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release Asset (arm64)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/derived-data-tool.tar.gz
          asset_name: derived-data-tool.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Upload Release Asset (x86_64)
      #   uses: actions/upload-release-asset@v1
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./dist/derived-data-tool-x86_64.tar.gz
      #     asset_name: derived-data-tool-x86_64.tar.gz
      #     asset_content_type: application/gzip
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Upload Release Asset (universal)
      #   uses: actions/upload-release-asset@v1
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./dist/derived-data-tool-universal.tar.gz
      #     asset_name: derived-data-tool-universal.tar.gz
      #     asset_content_type: application/gzip
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
