name: "[job] Version"

on:
  workflow_call:
    inputs:
      release-type:
        required: true
        type: string
    outputs:
      next-version:
        description: "Calculated Next Release Version"
        value: ${{ jobs.get-version.outputs.release-version }}
      current-version:
        description: "Receive current Verison"
        value: ${{ jobs.get-version.outputs.current-version }}

jobs:
  get-version:
    name: GET
    outputs:
      release-version: ${{ steps.release-version.outputs.release }}
      current-version: ${{ steps.last-version.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - name: git checkout
        uses: actions/checkout@v4

      - name: fetch version
        id: last-version
        run: |
          echo "Current version found: $(cat .version)" >> $GITHUB_STEP_SUMMARY
          echo "version=$(cat .version)" >> "$GITHUB_OUTPUT"

      - name: Get next version
        id: next-version
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.last-version.outputs.version }}

      - name: calculate next version
        id: release-version
        run: |
          if $IS_MAJOR_RELEASE; then
            echo "New major release will be created with version $MAJOR_VERSION" >> $GITHUB_STEP_SUMMARY
            echo "release=$MAJOR_VERSION" >> "$GITHUB_OUTPUT"
          elif $IS_MINOR_RELEASE; then
            echo "New minor release will be created with version $MINOR_VERSION" >> $GITHUB_STEP_SUMMARY
            echo "release=$MINOR_VERSION" >> "$GITHUB_OUTPUT"
          elif $IS_PATCH_RELEASE; then
            echo "New patch release will be created with version $PATCH_VERSION" >> $GITHUB_STEP_SUMMARY
            echo "release=$PATCH_VERSION" >> "$GITHUB_OUTPUT"
          else
            exit 1
          fi
        env:
          IS_MAJOR_RELEASE: ${{ inputs.release-type == 'major' }}
          MAJOR_VERSION: ${{ steps.next-version.outputs.major }}
          IS_MINOR_RELEASE: ${{ inputs.release-type == 'minor' }}
          MINOR_VERSION: ${{ steps.next-version.outputs.minor }}
          IS_PATCH_RELEASE: ${{ inputs.release-type == 'patch' }}
          PATCH_VERSION: ${{ steps.next-version.outputs.patch }}
