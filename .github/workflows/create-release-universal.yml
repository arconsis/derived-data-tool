name: Create Release [UNIVERSAL]

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: "Release version"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.get_version.outputs.release-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get Version
        id: get_version
        uses: ./.github/actions/get-version
        with:
          release-type: ${{ inputs.release-type }}

  build:
    needs: [get-version]
    runs-on: macos-15
    env:
      version: ${{ needs.get-version.outputs.release-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Initiate Swift Dependency Cache
        uses: ./.github/actions/create-swift-dependency-cache

      - name: Resolve Dependencies
        run: swift package resolve

      # Build Apple Silicon (arm64)
      - name: Build arm64
        run: swift build -c release --arch arm64
      - name: Package arm64
        run: tar -czf derived-data-tool-arm64.tar.gz -C $(swift build -c release --arch arm64 --show-bin-path)/derived-data-tool

      # Build Intel (x86_64)
      - name: Build x86_64
        run: swift build -c release --arch x86_64
      - name: Package x86_64
        run: tar -czf derived-data-tool-x86_64.tar.gz -C .build/x86_64-apple-macosx/release derived-data-tool

      # Create universal binary
      - name: Create universal binary
        run: swift build -c release --arch arm64 --arch x86_64
      - name: Package universal
        run: tar -czf derived-data-tool-universal.tar.gz -C ./universal-bin derived-data-tool

      # Upload artifacts
      - name: Upload arm64
        uses: actions/upload-artifact@v4
        with:
          name: derived-data-tool-arm64
          path: derived-data-tool-arm64.tar.gz
          retention-days: 14
      - name: Upload x86_64
        uses: actions/upload-artifact@v4
        with:
          name: derived-data-tool-x86_64
          path: derived-data-tool-x86_64.tar.gz
          retention-days: 14
      - name: Upload universal
        uses: actions/upload-artifact@v4
        with:
          name: derived-data-tool-universal
          path: derived-data-tool-universal.tar.gz
          retention-days: 14

      # Validate and increment version using Swift script
      - name: Validate and increment version using Swift script
        id: next_version_build
        run: |
          chmod +x ./scripts/ci/version-validator.swift
          ./scripts/ci/version-validator.swift check "${{ env.version }}"
          NEXT_VERSION=$(./scripts/ci/version-validator.swift build "${{ env.version }}")
          echo "next_version=$NEXT_VERSION" >> $GITHUB_ENV

      - name: Add tag to main branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag ${{ env.version }}
          git pull --rebase
          git push --tags

  create-github-release:
    needs: [build, get-version]
    runs-on: ubuntu-latest
    env:
      version: ${{ needs.get-version.outputs.release-version }}
    steps:
      - name: Download arm64
        uses: actions/download-artifact@v4
        with:
          name: derived-data-tool-arm64
          path: ./dist
      - name: Download x86_64
        uses: actions/download-artifact@v4
        with:
          name: derived-data-tool-x86_64
          path: ./dist
      - name: Download universal
        uses: actions/download-artifact@v4
        with:
          name: derived-data-tool-universal
          path: ./dist

      - name: List dist directory contents
        run: ls -l ./dist

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.version }}
          release_name: Release ${{ env.version }}
          body: |
            Automated release for version ${{ env.version }}.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload arm64 asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/derived-data-tool-arm64.tar.gz
          asset_name: derived-data-tool-arm64.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload x86_64 asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/derived-data-tool-x86_64.tar.gz
          asset_name: derived-data-tool-x86_64.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload universal asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/derived-data-tool-universal.tar.gz
          asset_name: derived-data-tool-universal.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
